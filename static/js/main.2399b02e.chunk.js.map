{"version":3,"sources":["components/NavigationBar.jsx","components/BookUploadForm.jsx","services/addNewUserBook.js","components/Line.jsx","constants.js","components/EditBookSideBar.jsx","components/TriggersPopUp.jsx","components/EditBookScreen.jsx","components/ReadBook.jsx","components/Routes.js","components/App.js","serviceWorker.js","index.js"],"names":["React","memo","props","useState","pathName","setPathName","useEffect","currentPath","renderInactiveNavLink","text","to","className","href","src","process","map","i","key","renderActiveNavLink","errMessage","setErrMessage","isLoading","setIsLoading","docFile","setDocFile","bookName","setBookName","toEdit","setToEdit","handleSubmit","a","console","debug","arrayBuffer","mammoth","convertToHtml","result","html","value","setBookContent","from","type","placeholder","onChange","e","target","id","fileName","files","name","test","hidden","onClick","disabled","lineClass","line","header","addClass","alt","onLineClick","lineId","sentenceId","dangerouslySetInnerHTML","__html","DISPLAY","FILTER","SPLIT_PATTERN","HTML_TEXT_DECORATION_TAGS","setDisplay","display","setSplitPattern","splitPattern","setFilter","filter","triggers","length","trigger","valueName","closePopUp","bookContent","logicalLines","setLogicalLines","setMenuLineId","setMenuSentenceId","menuLineHtml","setMenuLineHtml","showTriggersPopUp","setShowTriggersPopUp","menuTriggers","setMenuTriggers","isSentenceHeader","sentencePartsList","firstPart","getHtmlTagsRegex","matchStr","tag","split","join","replace","RegExp","getPartsAccordingToHtmlTags","lineList","currentlyOpenTags","returnList","sentence","sentenceSplitList","returnSentenceList","j","match","tagName","index","indexOf","splice","push","tags","parts","lineLists","lineListsSplitToParts","lineHtml","content","setBookData","prepareAndSetLogicalLines","handleLineClick","getSentenceHtml","getLineHtml","findLineHtml","concat","findLineTriggers","createLine","htmlSentence","forEach","part","slice","reverse","renderSentences","l","htmlLine","renderLines","style","backgroundColor","bookData","textClassName","location","useLocation","pathname","exact","path","warn","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yfAyEeA,G,OAAAA,IAAMC,MApEC,SAACC,GAAW,IAAD,EACCC,mBAAS,MADV,mBACxBC,EADwB,KACdC,EADc,KAG/BC,qBAAU,WACR,IAAMC,EAAcL,EAAME,SAC1BC,EAAYE,KACX,CAACL,EAAME,WAEV,IAQMI,EAAwB,SAACC,EAAMC,GACnC,OACE,kBAAC,IAAD,CAAMA,GAAIA,GACR,yBAAKC,UAAU,QAAQF,KAa7B,OACE,yBAAKE,UAAU,+CACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAUb,uBAAGA,UAAU,eAAeC,KAAK,KAC/B,yBACEC,IAAG,UAAKC,2BAAL,yBACHH,UAAU,eAxBL,CACf,CAAEF,KAAM,QAASC,GAAI,UACrB,CAAED,KAAM,yBAA0BC,GAAI,WACtC,CAAED,KAAM,qBAAsBC,GAAI,SAClC,CAAED,KAAM,oBAAqBC,GAAI,YACjC,CAAED,KAAM,aAAcC,GAAI,aAuBZK,KAAI,WAAeC,GAAf,IAAGP,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACZ,wBAAIO,IAAKD,GACNN,IAAON,EA1CU,SAACK,GAC3B,OAAO,yBAAKE,UAAU,eAAeF,GA0CzBS,CAAoBT,GACpBD,EAAsBC,EAAMC,OAGpC,wBAAIC,UAAU,mBACd,wBAAIA,UAAU,+BACZ,4BAAKH,EAAsB,QAAS,kB,mDCuC/BR,MAAMC,MAlGE,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACzBgB,EADyB,KACbC,EADa,OAEEjB,oBAAS,GAFX,mBAEzBkB,EAFyB,KAEdC,EAFc,OAGFnB,mBAAS,MAHP,mBAGzBoB,EAHyB,KAGhBC,EAHgB,OAIArB,mBAAS,IAJT,mBAIzBsB,EAJyB,KAIfC,EAJe,OAKJvB,oBAAS,GALL,mBAKzBwB,EALyB,KAKjBC,EALiB,KAO1BC,EAAY,uCAAG,gCAAAC,EAAA,6DACnBR,GAAa,GCXfS,QAAQC,MAAM,0CDUO,SAiBOT,EAAQU,cAjBf,cAiBbA,EAjBa,gBAqBEC,IAAQC,cAAc,CAAEF,gBArB1B,OAqBbG,EArBa,OAsBbC,EAAOD,EAAOE,MACpBV,GAAU,GACV1B,EAAMqC,eAAeF,GAxBF,4CAAH,qDAuClB,OAAIV,EACK,kBAAC,IAAD,CAAUa,KAAK,UAAU9B,GAAG,SAInC,kBAAC,WAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAd,uCACA,2BACEA,UAAU,6BACV8B,KAAK,OACLC,YAAY,gBACZJ,MAAOb,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAAYkB,EAAEC,OAAOP,UAExC,yBAAK3B,UAAU,oBACb,2BACE8B,KAAK,OACL9B,UAAU,oBACVmC,GAAG,mBACHH,SAlCW,SAACC,GACxB,IAAMG,EAAWH,EAAEC,OAAOG,MAAM,GAAGC,KAChB,UACJC,KAAKH,IAClBvB,EAAWoB,EAAEC,OAAOG,MAAM,IAC1B5B,EAAc,MAEdI,EAAW,MACXJ,EAAc,mDA4BN,2BAAOT,UAAU,qBACdY,EAAUA,EAAQ0B,KAAO,sBAE5B,4BACE,4BACE,0BACEtC,UAAU,0BACVwC,QAAShC,GAERA,MAKT,4BACEiC,QAASvB,EACTlB,UAAU,oCACV0C,SAAUhC,IAAcE,IAAYE,GAEnCJ,EAAY,iBAAmB,oBErE/BrB,G,OAAAA,IAAMC,MAvBR,SAACC,GACZ,IAAMoD,EAAS,yBAAqBpD,EAAMqD,KAAKC,OAAS,SAAW,IAC7DC,EAAQ,uBAAmBvD,EAAMqD,KAAKC,OAAS,SAAW,IAEhE,OACE,yBAAK7C,UAAU,OACb,yBACEA,UAAW8C,EACX5C,IAAG,UAAKC,2BAAL,mBACH4C,IAAI,gBAEN,yBACE/C,UAAW2C,EACXF,QAAS,kBACPlD,EAAMyD,YAAYzD,EAAMqD,KAAKK,OAAQ1D,EAAMqD,KAAKM,cAGlD,2BAAOC,wBAAyB,CAAEC,OAAQ7D,EAAMqD,KAAKlB,cCrBhD2B,G,OACA,GADAA,EAEK,EAGLC,EACL,EADKA,EAEE,EAFFA,EAGO,EAGPC,EACA,EADAA,EAEJ,EAIIC,EAA4B,CAAC,SAAU,KAAM,IAAK,KCiIhDnE,MAAMC,MA7IG,SAACC,GACvB,OACE,yBAAKS,UAAU,iCACb,yBAAKmC,GAAG,UAAUnC,UAAU,yBAC1B,wBAAIA,UAAU,qBACZ,6BACE,4BACE,0CAGJ,4BACE,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,sBAAjB,0BAGJ,4BACE,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,sCAAjB,YAIF,wBAAIA,UAAU,gBAAgBmC,GAAG,eAC/B,4BACE,yBACEM,QAAS,kBAAMlD,EAAMkE,WAAWJ,IAChCrD,UAAS,+BACPT,EAAMmE,UAAYL,EAAoB,YAAc,KAGtD,2BAAOrD,UAAU,0BAAjB,gBAGJ,4BACE,yBACEyC,QAAS,kBAAMlD,EAAMkE,WAAWJ,IAChCrD,UAAS,+BACPT,EAAMmE,UAAYL,EAAyB,YAAc,KAG3D,2BAAOrD,UAAU,0BAAjB,uBAOR,4BACE,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,sCAAjB,aAIF,wBAAIA,UAAU,gBAAgBmC,GAAG,eAC/B,4BACE,yBACEM,QAAS,kBAAMlD,EAAMoE,gBAAgBJ,IACrCvD,UAAS,+BACPT,EAAMqE,eAAiBL,EACnB,YACA,KAGN,2BAAOvD,UAAU,0BAAjB,eAGJ,4BACE,yBACEyC,QAAS,kBAAMlD,EAAMoE,gBAAgBJ,IACrCvD,UAAS,+BACPT,EAAMqE,eAAiBL,EACnB,YACA,KAGN,2BAAOvD,UAAU,0BAAjB,aAKR,4BACE,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,sCAAjB,WAIF,wBAAIA,UAAU,iBACZ,4BACE,yBACEyC,QAAS,kBAAMlD,EAAMsE,UAAUP,IAC/BtD,UAAS,+BACPT,EAAMuE,SAAWR,EAAc,YAAc,KAG/C,2BAAOtD,UAAU,0BAAjB,UAGJ,4BACE,yBACEyC,QAAS,kBAAMlD,EAAMsE,UAAUP,IAC/BtD,UAAS,+BACPT,EAAMuE,SAAWR,EAAqB,YAAc,KAGtD,2BAAOtD,UAAU,0BAAjB,kBAGJ,4BACE,yBACEyC,QAAS,kBAAMlD,EAAMsE,UAAUP,IAC/BtD,UAAS,+BACPT,EAAMuE,SAAWR,EAA0B,YAAc,KAG3D,2BAAOtD,UAAU,0BAAjB,0BAOR,4BACE,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,sBAAjB,qBAGJ,4BACE,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,sBAAjB,yBAGJ,4BACE,yBAAKA,UAAU,0BACb,2BAAOA,UAAU,sBAAjB,4BCjGCX,G,cAAAA,IAAMC,MArCC,SAACC,GAErB,OACE,yBAAKS,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKmD,wBAAyB,CAAEC,OAAQ,IAAM7D,EAAMmC,KAAO,OAC3D,yBAAK1B,UAAU,yBAAf,sBACCT,EAAMwE,SAASC,OAAS,EACvB,yBAAKhE,UAAU,YACZT,EAAMwE,SAAS3D,KAAI,SAAC6D,EAAS5D,GAAV,OAClB,yBAAKC,IAAKD,GACR,yBAAKL,UAAU,YAAYiE,EAAQ3B,KAAO,KAC1C,yBAAKtC,UAAU,YAAYiE,EAAQnC,KAAO,KAC1C,yBAAK9B,UAAU,YAAYiE,EAAQC,UAAY,KAC/C,yBAAKlE,UAAU,YACb,4BAAQA,UAAU,kBAAlB,6BAQR,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YAAf,8CAGJ,yBAAKA,UAAU,OACb,4BAAQyC,QAASlD,EAAM4E,WAAYnE,UAAU,gCAA7C,gBC6OKX,MAAMC,MAhQE,SAACC,GACtB,IAAM6E,EAAc7E,EAAM6E,YADM,EAGQ5E,mBAAS,MAHjB,mBAGzB6E,EAHyB,KAGXC,EAHW,OAIF9E,mBAAS6D,GAJP,mBAIzBK,EAJyB,KAIhBD,EAJgB,OAKJjE,mBAAS8D,GALL,mBAKzBQ,EALyB,KAKjBD,EALiB,OAMQrE,mBAAS+D,GANjB,mBAMzBK,EANyB,KAMXD,EANW,OAOEnE,qBAAS4E,GAPX,mBAOzB1D,EAPyB,KAOdC,EAPc,OAQInB,mBAAS,MARb,mBAQb+E,GARa,aASY/E,mBAAS,MATrB,mBASTgF,GATS,aAUQhF,mBAAS,MAVjB,mBAUzBiF,EAVyB,KAUXC,EAVW,OAWkBlF,oBAAS,GAX3B,mBAWzBmF,EAXyB,KAWNC,EAXM,OAYQpF,mBAAS,IAZjB,mBAYzBqF,EAZyB,KAYXC,EAZW,KAc1BC,EAAmB,SAACC,GACxB,IAAKA,EAAkB,GACrB,OAAO,EAET,IAAMC,EAAYD,EAAkB,GAAGlF,KACvC,MAAO,WAAWyC,KAAK0C,IAAc,WAAW1C,KAAK0C,IAGjDC,EAAmB,WACvB,IAAMC,EAAW,YAAK3B,EAA0BpD,KAC9C,SAACgF,GAAD,kBAAcA,EAAd,QADe,MAGdC,MAAM,KACNC,KAAK,IACLC,QAAQ,IAAK,IAChB,OAAO,IAAIC,OAAOL,IAGdM,EAA8B,SAACC,GAGnC,IAFA,IAAIC,EAAoB,GACpBC,EAAa,GACRvF,EAAI,EAAGA,EAAIqF,EAAS1B,OAAQ3D,IAAK,CAKxC,IAJA,IAAIwF,EAAWH,EAASrF,GAAGgF,MAAM,QAAQC,KAAK,OAExCQ,GADND,EAAWA,EAASR,MAAM,KAAKC,KAAK,QACDD,MAAM,MACnCU,EAAqB,GAClBC,EAAI,EAAGA,EAAIF,EAAkB9B,OAAQgC,IAAK,CACjD,IAAMC,EAAQH,EAAkBE,GAAGC,MAAMf,KACzC,GAAIe,GACF,GAAIA,EAAM,GAAI,CACZ,IAAMC,EAAUD,EAAM,GAChBE,EAAQR,EAAkBS,QAAQF,GACpCC,GAAS,EACXR,EAAkBU,OAAOF,EAAO,GAEhCR,EAAkBW,KAAKJ,QAGO,KAAzBJ,EAAkBE,IAC3BD,EAAmBO,KAAK,CACtBxG,KAAMgG,EAAkBE,GACxBO,KAAK,GAAD,OAAMZ,KAIhBC,EAAWvF,GAAK,CACdmG,MAAM,GAAD,OAAMT,GACXlD,OAAQkC,EAAiBgB,GACzB7C,WAAY7C,EACZ0D,SAAU,IAGd,OAAO6B,GAmBTjG,qBAAU,WACJyE,IACFzD,GAAa,GAlBiB,WAChC,IAAI8F,EAAYrC,EAAYiB,MAAM,WAQ5BqB,GAPND,EAAYA,EAAUrG,KAAI,SAACsF,GAAD,OACxBA,EACGL,MAAM,MACNC,KAAK,QACLD,MAAM,UACNvB,QAAO,SAAC6C,GAAD,MAA2B,KAAbA,SAEcvG,KAAI,SAACsF,EAAUrF,GACrD,MAAO,CAAEuG,QAASnB,EAA4BC,GAAWzC,OAAQ5C,MAEnEiE,EAAgBoC,GAChBnH,EAAMsH,YAAYH,GAMhBI,GACAnG,GAAa,MAEd,CAACyD,IAEJ,IAwBM2C,GAAkB,SAAC9D,EAAQC,GAC/BqB,EAActB,GACduB,EAAkBtB,GAClBwB,EA3BmB,SAACzB,EAAQC,GAC5B,IAAMN,EAAOyB,EAAapB,GAC1B,GAAkB,MAAdC,EAAoB,CACtB,IAAM2C,EAAWjD,EAAKgE,QAAQ1D,GAC9B,OAAO8D,GAAgBnB,GAEvB,OAAOoB,GAAYrE,GAqBLsE,CAAajE,EAAQC,IACrC4B,EAlBuB,SAAC7B,EAAQC,GAChC,IAAMN,EAAOyB,EAAapB,GAC1B,GAAkB,MAAdC,EAEF,OADiBN,EAAKgE,QAAQ1D,GACda,SAGhB,IADA,IAAIA,EAAW,GACN1D,EAAI,EAAGA,EAAIuC,EAAKgE,QAAQ5C,OAAQ3D,IACvC0D,EAAWA,EAASoD,OAAOvE,EAAKgE,QAAQvG,GAAG0D,UAE7C,OAAOA,EAQOqD,CAAiBnE,EAAQC,IACzC0B,GAAqB,IAGjByC,GAAa,SAACzE,EAAMvC,GACxB,OAAO,kBAAC,EAAD,CAAMuC,KAAMA,EAAMtC,IAAKD,EAAG2C,YAAa+D,MAkB1CC,GAAkB,SAACnB,GACvB,IAAIyB,EAAe,GAanB,OAZAzB,EAASW,MAAMe,SAAQ,SAACC,GACtBA,EAAKjB,KAAKgB,SAAQ,SAACnC,GACjBkC,GAAY,WAAQlC,EAAR,QAEdkC,GAAgBE,EAAK1H,KAAO,IAC5B0H,EAAKjB,KACFkB,MAAM,GACNC,UACAH,SAAQ,SAACnC,GACRkC,GAAY,YAASlC,EAAT,WAGXkC,GAGHK,GAAkB,WACtB,OAAOtD,EAAajE,KAAI,SAACwC,EAAMgF,GAC7B,OACE,yBAAKtH,IAAKsC,EAAKK,OAAQjD,UAAU,gBAC9B4C,EAAKgE,QAAQxG,KAAI,SAACyF,GACjB,IAAIyB,EAAeN,GAAgBnB,GACnC,OAAOwB,GACL,CACE3F,KAAM4F,EACNzE,OAAQgD,EAAShD,OACjBI,OAAQL,EAAKK,OACbC,WAAY2C,EAAS3C,YAEvB2C,EAAS3C,oBAQf+D,GAAc,SAACrE,GACnB,IAAIiF,EAAW,GAef,OAdAjF,EAAKgE,QAAQW,SAAQ,SAAC1B,GACpBA,EAASW,MAAMe,SAAQ,SAACC,GACtBA,EAAKjB,KAAKgB,SAAQ,SAACnC,GACjByC,GAAQ,WAAQzC,EAAR,QAEVyC,GAAYL,EAAK1H,KAAO,IACxB0H,EAAKjB,KACFkB,MAAM,GACNC,UACAH,SAAQ,SAACnC,GACRyC,GAAQ,YAASzC,EAAT,cAITyC,GAGHC,GAAc,WAClB,OAAOzD,EAAajE,KAAI,SAACwC,GACvB,IAAIiF,EAAWZ,GAAYrE,GAC3B,OAAOyE,GACL,CACE3F,KAAMmG,EACNhF,OAAQD,EAAKgE,QAAQ,GAAG/D,OACxBI,OAAQL,EAAKK,OACbC,WAAY,MAEdN,EAAKK,YAKX,OACE,kBAAC,WAAD,KACE,yBAAKjD,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4BACb,kBAAC,EAAD,CACE0D,QAASA,EACTI,OAAQA,EACRL,WAAYA,EACZI,UAAWA,EACXD,aAAcA,EACdD,gBAAiBA,KAGrB,yBAAK3D,UAAU,sCACf,yBAAKA,UAAU,+BACZqE,EAtGLT,IAAiBL,EACZoE,KACE/D,IAAiBL,EACnBuE,KAGL,iJAkGQpH,EACF,wDAEA,2GAKDiE,EACC,kBAAC,EAAD,CACEjD,KAAM+C,EACNV,SAAUc,EACVV,WAAY,kBAAMS,GAAqB,MAEvC,YChNDvF,G,OAAAA,IAAMC,MAjDJ,SAACC,GA0ChB,OACE,yBAAKS,UAAU,kBAAkB+H,MAJ1B,CAAEC,gBAAiB,UAKvBzI,EAAM0I,SA1CF1I,EAAM0I,SAAS7H,KAAI,SAACwC,EAAMgF,GAC/B,OACE,uBAAGtH,IAAKsH,GACLhF,EAAKgE,QAAQxG,KAAI,SAACyF,EAAUxF,GAC3B,IAAIiH,EAAe,GACnBzB,EAASW,MAAMe,SAAQ,SAACC,GACtBA,EAAKjB,KAAKgB,SAAQ,SAACnC,GACjBkC,GAAY,WAAQlC,EAAR,QAEdkC,GAAgBE,EAAK1H,KAAO,IAC5B0H,EAAKjB,KACFkB,MAAM,GACNC,UACAH,SAAQ,SAACnC,GACRkC,GAAY,YAASlC,EAAT,WAGlB,IAAM8C,GACHrC,EAAShD,OAAS,SAAW,QAAU,aAC1C,OACE,2BACEM,wBAAyB,CAAEC,OAAQkE,GACnChH,IAAKD,EACLL,UAAWkI,WAmBqB,UCXjC7I,MAAMC,MA9BN,SAACC,GACd,IAAM4I,EAAWC,cAEf1I,EAKEH,EALFG,YACAkC,EAIErC,EAJFqC,eACAwC,EAGE7E,EAHF6E,YACA6D,EAEE1I,EAFF0I,SACApB,EACEtH,EADFsH,YAOF,OAJAlH,qBAAU,WACRD,EAAYyI,EAASE,YACpB,CAACF,EAAUzI,IAGZ,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAO4I,OAAK,EAACC,KAAK,SAChB,kBAAC,EAAD,CAAgBnE,YAAaA,EAAayC,YAAaA,KAEzD,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,CAAgB3G,eAAgBA,KAElC,kBAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAD,CAAUN,SAAUA,KAEtB,kBAAC,IAAD,CAAUK,OAAK,EAACzG,KAAK,IAAI9B,GAAIqE,EAAc,QAAU,gBCU5C/E,MAAMC,MAlCT,WAAO,IAAD,EACsBE,mBAAS,MAD/B,mBACT4E,EADS,KACIxC,EADJ,OAEgBpC,mBAAS,MAFzB,mBAETC,EAFS,KAECC,EAFD,OAGgBF,mBAAS,MAHzB,mBAGTyI,EAHS,KAGCpB,EAHD,KAehB,OALAlH,qBAAU,WACR,IAAMyE,GALNhD,QAAQoH,KAAK,6DACN,MAKP5G,EAAewC,KACd,IAGD,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAe3E,SAAUA,IACzB,yBAAKO,UAAU,iBACf,kBAAC,IAAD,CAAOuI,KAAK,KACV,kBAAC,EAAD,CACE7I,YAAaA,EACb0E,YAAaA,EACbxC,eAAgBA,EAChBqG,SAAUA,EACVpB,YAAaA,UCrBL4B,QACW,cAA7BC,OAAOP,SAASQ,UAEe,UAA7BD,OAAOP,SAASQ,UAEhBD,OAAOP,SAASQ,SAAS1C,MACvB,2DCXN2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,yBAAK9I,UAAU,uCACb,kBAAC,EAAD,QAGJ+I,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpI,QAAQoI,MAAMA,EAAMC,c","file":"static/js/main.2399b02e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./NavigationBar.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavigationBar = (props) => {\r\n  const [pathName, setPathName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const currentPath = props.pathName;\r\n    setPathName(currentPath);\r\n  }, [props.pathName]);\r\n\r\n  const handleCollapseNavBar = () => {\r\n    console.error(\"handleCollapseNavBar not implemented\");\r\n  };\r\n\r\n  const renderActiveNavLink = (text) => {\r\n    return <div className=\"link-active\">{text}</div>;\r\n  };\r\n\r\n  const renderInactiveNavLink = (text, to) => {\r\n    return (\r\n      <Link to={to}>\r\n        <div className=\"link\">{text}</div>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const navLinks = [\r\n    { text: \"About\", to: \"/about\" },\r\n    { text: \"Upload a New Book File\", to: \"/upload\" },\r\n    { text: \"Edit Book Triggers\", to: \"/edit\" },\r\n    { text: \"Preview Read Book\", to: \"/preview\" },\r\n    { text: \"Contact Us\", to: \"/contact\" },\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"navbar-toggle\"\r\n            onClick={handleCollapseNavBar}\r\n          >\r\n            <span className=\"icon-bar\"></span>\r\n            <span className=\"icon-bar\"></span>\r\n            <span className=\"icon-bar\"></span>\r\n          </button> */}\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/images/temp_logo.png`}\r\n              className=\"logo-img\"\r\n            />\r\n          </a>\r\n        </div>\r\n        {navLinks.map(({ text, to }, i) => (\r\n          <li key={i}>\r\n            {to === pathName\r\n              ? renderActiveNavLink(text)\r\n              : renderInactiveNavLink(text, to)}\r\n          </li>\r\n        ))}\r\n        <ul className=\"nav navbar-nav\"></ul>\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>{renderInactiveNavLink(\"Login\", \"/login\")}</li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default React.memo(NavigationBar);\r\n","import React, { useState, Fragment } from \"react\";\r\nimport \"./BookUploadForm.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport mammoth from \"mammoth\";\r\nimport addNewBook from \"../services/addNewUserBook\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst BookUploadForm = (props) => {\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [docFile, setDocFile] = useState(null);\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [toEdit, setToEdit] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    addNewBook();\r\n    // Save file in server (if I'll need it in the future):\r\n    // const fd = new FormData();\r\n    // fd.append(\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", this.docFile, this.docFile.name);\r\n    // const res = await axios.post(url, fd, {\r\n    //   onUploadProgress: (progressEvent) => {\r\n    //     console.log(\r\n    //       \"Upload progress:\",\r\n    //       Math.round((progressEvent.loaded / progressEvent.total) * 100) + \"%\"\r\n    //     );\r\n    //   },\r\n    // });\r\n    // console.log(res);\r\n\r\n    // Convert and get the docx as html\r\n    const arrayBuffer = await docFile.arrayBuffer();\r\n    // const result = await mammoth.extractRawText({ arrayBuffer });\r\n    // const text = result.value;\r\n    // console.log(text);\r\n    const result = await mammoth.convertToHtml({ arrayBuffer });\r\n    const html = result.value;\r\n    setToEdit(true);\r\n    props.setBookContent(html);\r\n  };\r\n\r\n  const handleChangeFile = (e) => {\r\n    const fileName = e.target.files[0].name;\r\n    const docPattern = /.*.docx/;\r\n    if (docPattern.test(fileName)) {\r\n      setDocFile(e.target.files[0]);\r\n      setErrMessage(\"\");\r\n    } else {\r\n      setDocFile(null);\r\n      setErrMessage(\"Please only select a file ending with .docx\");\r\n    }\r\n  };\r\n\r\n  if (toEdit) {\r\n    return <Redirect from=\"/upload\" to=\"edit\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"menu-bg\">\r\n        <div className=\"menu-window\">\r\n          <div className=\"menu\">\r\n            <h4 className=\"menu-header\">Welcome to Interactive Book Editor!</h4>\r\n            <input\r\n              className=\"col form-control mt-4 mb-3\"\r\n              type=\"text\"\r\n              placeholder=\"New Book Name\"\r\n              value={bookName}\r\n              onChange={(e) => setBookName(e.target.value)}\r\n            />\r\n            <div className=\"custom-file mb-2\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"custom-file-input\"\r\n                id=\"inputGroupFile01\"\r\n                onChange={handleChangeFile}\r\n              />\r\n              <label className=\"custom-file-label\">\r\n                {docFile ? docFile.name : \"Choose a docx file\"}\r\n              </label>\r\n              <li>\r\n                <h6>\r\n                  <span\r\n                    className=\"badge badge-danger mt-2\"\r\n                    hidden={!errMessage}\r\n                  >\r\n                    {errMessage}\r\n                  </span>\r\n                </h6>\r\n              </li>\r\n            </div>\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"btn btn-success form-control mt-3\"\r\n              disabled={isLoading || !docFile || !bookName}\r\n            >\r\n              {isLoading ? \"Please wait...\" : \"Load Book\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(BookUploadForm);\r\n","// import { SendRequest } from \"../apiUtils\";\r\n// import axios from \"axios\";\r\n\r\nexport default (authToken, bookData) => {\r\n  console.debug(\"not implemented addNewUserBook service\");\r\n};\r\n","import React from \"react\";\r\nimport \"./Line.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Line = (props) => {\r\n  const lineClass = `line line-text ${props.line.header ? \"header\" : \"\"}`;\r\n  const addClass = `line add-img ${props.line.header ? \"header\" : \"\"}`;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <img\r\n        className={addClass}\r\n        src={`${process.env.PUBLIC_URL}/images/add.png`}\r\n        alt=\"Add Trigger\"\r\n      />\r\n      <div\r\n        className={lineClass}\r\n        onClick={() =>\r\n          props.onLineClick(props.line.lineId, props.line.sentenceId)\r\n        }\r\n      >\r\n        <label dangerouslySetInnerHTML={{ __html: props.line.html }}></label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Line);\r\n","export const DISPLAY = {\r\n  wholeBook: 0,\r\n  currentChapter: 1,\r\n};\r\n\r\nexport const FILTER = {\r\n  none: 0,\r\n  viewHeaders: 1,\r\n  viewTriggerLines: 2,\r\n};\r\n\r\nexport const SPLIT_PATTERN = {\r\n  sentences: 0,\r\n  lines: 1,\r\n  paragraphs: 2,\r\n};\r\n\r\nexport const HTML_TEXT_DECORATION_TAGS = [\"strong\", \"em\", \"i\", \"b\"];\r\n","import React from \"react\";\r\nimport \"./EditBookSideBar.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { DISPLAY, FILTER, SPLIT_PATTERN } from \"../constants\";\r\n\r\nconst EditBookSideBar = (props) => {\r\n  return (\r\n    <div className=\"wrapper side-bar p-0 pt-4 m-0\">\r\n      <nav id=\"sidebar\" className=\"fixed-pos row p-0 m-0\">\r\n        <ul className=\"list-unstyled col\">\r\n          <div>\r\n            <h3>\r\n              <b>Edit Book</b>\r\n            </h3>\r\n          </div>\r\n          <li>\r\n            <div className=\"side-bar-item col\">\r\n              <label className=\"side-bar-item-text\">Mark Chapter Headers</label>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"side-bar-item col\">\r\n              <label className=\"dropdown-toggle side-bar-item-text\">\r\n                Display\r\n              </label>\r\n            </div>\r\n            <ul className=\"list-unstyled\" id=\"homeSubmenu\">\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setDisplay(DISPLAY.wholeBook)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.display === DISPLAY.wholeBook ? \" selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">Whole Book</label>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setDisplay(DISPLAY.currentChapter)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.display === DISPLAY.currentChapter ? \" selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">\r\n                    Current Chapter\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <div className=\"side-bar-item col\">\r\n              <label className=\"dropdown-toggle side-bar-item-text\">\r\n                Split by\r\n              </label>\r\n            </div>\r\n            <ul className=\"list-unstyled\" id=\"homeSubmenu\">\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setSplitPattern(SPLIT_PATTERN.sentences)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.splitPattern === SPLIT_PATTERN.sentences\r\n                      ? \" selected\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">Sentences</label>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setSplitPattern(SPLIT_PATTERN.lines)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.splitPattern === SPLIT_PATTERN.lines\r\n                      ? \" selected\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">Lines</label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <div className=\"side-bar-item col\">\r\n              <label className=\"dropdown-toggle side-bar-item-text\">\r\n                Filter\r\n              </label>\r\n            </div>\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setFilter(FILTER.none)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.filter === FILTER.none ? \" selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">None</label>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setFilter(FILTER.viewHeaders)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.filter === FILTER.viewHeaders ? \" selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">View Headers</label>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div\r\n                  onClick={() => props.setFilter(FILTER.viewTriggerLines)}\r\n                  className={`side-bar-item-sub col${\r\n                    props.filter === FILTER.viewTriggerLines ? \" selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <label className=\"side-bar-item-sub-text\">\r\n                    View Trigger Lines\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <div className=\"side-bar-item col\">\r\n              <label className=\"side-bar-item-text\">Save Checkpoint</label>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"side-bar-item col\">\r\n              <label className=\"side-bar-item-text\">Choose Another Book</label>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"side-bar-item last col\">\r\n              <label className=\"side-bar-item-text\">Publish / Update</label>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditBookSideBar);\r\n","import React from \"react\";\r\nimport \"./TriggersPopUp.scss\";\r\n\r\nconst TriggersPopUp = (props) => {\r\n  //   console.log(props);\r\n  return (\r\n    <div className=\"triggers-popup\">\r\n      <div className=\"menu flex-column\">\r\n        <div dangerouslySetInnerHTML={{ __html: '\"' + props.html + '\"' }}></div>\r\n        <div className=\"menu-header mb-3 mt-4\">Assigned Triggers:</div>\r\n        {props.triggers.length > 0 ? (\r\n          <div className=\"row mb-4\">\r\n            {props.triggers.map((trigger, i) => (\r\n              <div key={i}>\r\n                <div className=\"col-sm-3\">{trigger.name + \":\"}</div>\r\n                <div className=\"col-sm-3\">{trigger.type + \":\"}</div>\r\n                <div className=\"col-sm-3\">{trigger.valueName + \":\"}</div>\r\n                <div className=\"col-sm-3\">\r\n                  <button className=\"btn btn-danger\">\r\n                    Remove This Trigger\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col ml-3\">There are currently no assigned triggers.</div>\r\n          </div>\r\n        )}\r\n        <div className=\"row\">\r\n          <button onClick={props.closePopUp} className=\"btn btn-light col-4 offset-4\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TriggersPopUp);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Line from \"./Line\";\r\nimport EditBookSideBar from \"./EditBookSideBar\";\r\nimport {\r\n  DISPLAY,\r\n  FILTER,\r\n  SPLIT_PATTERN,\r\n  HTML_TEXT_DECORATION_TAGS,\r\n} from \"../constants\";\r\nimport \"./EditBookScreen.scss\";\r\nimport TriggersPopUp from \"./TriggersPopUp\";\r\n\r\nconst EditBookScreen = (props) => {\r\n  const bookContent = props.bookContent;\r\n\r\n  const [logicalLines, setLogicalLines] = useState(null);\r\n  const [display, setDisplay] = useState(DISPLAY.wholeBook);\r\n  const [filter, setFilter] = useState(FILTER.none);\r\n  const [splitPattern, setSplitPattern] = useState(SPLIT_PATTERN.sentences);\r\n  const [isLoading, setIsLoading] = useState(bookContent ? true : false);\r\n  const [menuLineId, setMenuLineId] = useState(null);\r\n  const [menuSentenceId, setMenuSentenceId] = useState(null);\r\n  const [menuLineHtml, setMenuLineHtml] = useState(null);\r\n  const [showTriggersPopUp, setShowTriggersPopUp] = useState(false);\r\n  const [menuTriggers, setMenuTriggers] = useState([]);\r\n\r\n  const isSentenceHeader = (sentencePartsList) => {\r\n    if (!sentencePartsList[0]) {\r\n      return false;\r\n    }\r\n    const firstPart = sentencePartsList[0].text;\r\n    return /chapter/i.test(firstPart) || /episode/i.test(firstPart);\r\n  };\r\n\r\n  const getHtmlTagsRegex = () => {\r\n    const matchStr = `<(${HTML_TEXT_DECORATION_TAGS.map(\r\n      (tag) => `|(${tag})`\r\n    )})>`\r\n      .split(\",\")\r\n      .join(\"\")\r\n      .replace(\"|\", \"\");\r\n    return new RegExp(matchStr);\r\n  };\r\n\r\n  const getPartsAccordingToHtmlTags = (lineList) => {\r\n    let currentlyOpenTags = [];\r\n    let returnList = [];\r\n    for (let i = 0; i < lineList.length; i++) {\r\n      let sentence = lineList[i].split(/<\\/?/).join(\"%%<\");\r\n      sentence = sentence.split(\">\").join(\">%%\");\r\n      const sentenceSplitList = sentence.split(\"%%\");\r\n      const returnSentenceList = [];\r\n      for (let j = 0; j < sentenceSplitList.length; j++) {\r\n        const match = sentenceSplitList[j].match(getHtmlTagsRegex());\r\n        if (match) {\r\n          if (match[1]) {\r\n            const tagName = match[1];\r\n            const index = currentlyOpenTags.indexOf(tagName);\r\n            if (index > -1) {\r\n              currentlyOpenTags.splice(index, 1);\r\n            } else {\r\n              currentlyOpenTags.push(tagName);\r\n            }\r\n          }\r\n        } else if (sentenceSplitList[j] !== \"\") {\r\n          returnSentenceList.push({\r\n            text: sentenceSplitList[j],\r\n            tags: [...currentlyOpenTags],\r\n          });\r\n        }\r\n      }\r\n      returnList[i] = {\r\n        parts: [...returnSentenceList],\r\n        header: isSentenceHeader(returnSentenceList),\r\n        sentenceId: i,\r\n        triggers: [],\r\n      };\r\n    }\r\n    return returnList;\r\n  };\r\n\r\n  const prepareAndSetLogicalLines = () => {\r\n    let lineLists = bookContent.split(\"</p><p>\");\r\n    lineLists = lineLists.map((lineList) =>\r\n      lineList\r\n        .split(\". \")\r\n        .join(\".<p>\")\r\n        .split(/<\\/?p>/)\r\n        .filter((lineHtml) => lineHtml !== \"\")\r\n    );\r\n    const lineListsSplitToParts = lineLists.map((lineList, i) => {\r\n      return { content: getPartsAccordingToHtmlTags(lineList), lineId: i };\r\n    });\r\n    setLogicalLines(lineListsSplitToParts);\r\n    props.setBookData(lineListsSplitToParts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (bookContent) {\r\n      setIsLoading(true);\r\n      prepareAndSetLogicalLines();\r\n      setIsLoading(false);\r\n    }\r\n  }, [bookContent]);\r\n\r\n  const findLineHtml = (lineId, sentenceId) => {\r\n    const line = logicalLines[lineId];\r\n    if (sentenceId != null) {\r\n      const sentence = line.content[sentenceId];\r\n      return getSentenceHtml(sentence);\r\n    } else {\r\n      return getLineHtml(line);\r\n    }\r\n  };\r\n\r\n  const findLineTriggers = (lineId, sentenceId) => {\r\n    const line = logicalLines[lineId];\r\n    if (sentenceId != null) {\r\n      const sentence = line.content[sentenceId];\r\n      return sentence.triggers;\r\n    } else {\r\n      let triggers = [];\r\n      for (let i = 0; i < line.content.length; i++) {\r\n        triggers = triggers.concat(line.content[i].triggers);\r\n      }\r\n      return triggers;\r\n    }\r\n  };\r\n\r\n  const handleLineClick = (lineId, sentenceId) => {\r\n    setMenuLineId(lineId);\r\n    setMenuSentenceId(sentenceId);\r\n    setMenuLineHtml(findLineHtml(lineId, sentenceId));\r\n    setMenuTriggers(findLineTriggers(lineId, sentenceId));\r\n    setShowTriggersPopUp(true);\r\n  };\r\n\r\n  const createLine = (line, i) => {\r\n    return <Line line={line} key={i} onLineClick={handleLineClick} />;\r\n  };\r\n\r\n  const renderDisplayedContent = () => {\r\n    if (splitPattern === SPLIT_PATTERN.sentences) {\r\n      return renderSentences();\r\n    } else if (splitPattern === SPLIT_PATTERN.lines) {\r\n      return renderLines();\r\n    } else {\r\n      return (\r\n        <div>\r\n          The \"split by\" value is not supported for this type of book file.\r\n          Please change it to either lines or sentences.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getSentenceHtml = (sentence) => {\r\n    let htmlSentence = \"\";\r\n    sentence.parts.forEach((part) => {\r\n      part.tags.forEach((tag) => {\r\n        htmlSentence += `<${tag}>`;\r\n      });\r\n      htmlSentence += part.text + \" \";\r\n      part.tags\r\n        .slice(0)\r\n        .reverse()\r\n        .forEach((tag) => {\r\n          htmlSentence += `</${tag}>`;\r\n        });\r\n    });\r\n    return htmlSentence;\r\n  };\r\n\r\n  const renderSentences = () => {\r\n    return logicalLines.map((line, l) => {\r\n      return (\r\n        <div key={line.lineId} className=\"line-wrapper\">\r\n          {line.content.map((sentence) => {\r\n            let htmlSentence = getSentenceHtml(sentence);\r\n            return createLine(\r\n              {\r\n                html: htmlSentence,\r\n                header: sentence.header,\r\n                lineId: line.lineId,\r\n                sentenceId: sentence.sentenceId,\r\n              },\r\n              sentence.sentenceId\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getLineHtml = (line) => {\r\n    let htmlLine = \"\";\r\n    line.content.forEach((sentence) => {\r\n      sentence.parts.forEach((part) => {\r\n        part.tags.forEach((tag) => {\r\n          htmlLine += `<${tag}>`;\r\n        });\r\n        htmlLine += part.text + \" \";\r\n        part.tags\r\n          .slice(0)\r\n          .reverse()\r\n          .forEach((tag) => {\r\n            htmlLine += `</${tag}>`;\r\n          });\r\n      });\r\n    });\r\n    return htmlLine;\r\n  };\r\n\r\n  const renderLines = () => {\r\n    return logicalLines.map((line) => {\r\n      let htmlLine = getLineHtml(line);\r\n      return createLine(\r\n        {\r\n          html: htmlLine,\r\n          header: line.content[0].header,\r\n          lineId: line.lineId,\r\n          sentenceId: null,\r\n        },\r\n        line.lineId\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"side-bar-bg floating-col\">\r\n            <EditBookSideBar\r\n              display={display}\r\n              filter={filter}\r\n              setDisplay={setDisplay}\r\n              setFilter={setFilter}\r\n              splitPattern={splitPattern}\r\n              setSplitPattern={setSplitPattern}\r\n            />\r\n          </div>\r\n          <div className=\"side-bar-mock-filler floating-col\"></div>\r\n          <div className=\"main-edit-area floating-col\">\r\n            {logicalLines ? (\r\n              renderDisplayedContent()\r\n            ) : isLoading ? (\r\n              <div>Loading book content...</div>\r\n            ) : (\r\n              <div>\r\n                No book content to edit. Please use the upload page to upload a\r\n                book file.\r\n              </div>\r\n            )}\r\n            {showTriggersPopUp ? (\r\n              <TriggersPopUp\r\n                html={menuLineHtml}\r\n                triggers={menuTriggers}\r\n                closePopUp={() => setShowTriggersPopUp(false)}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditBookScreen);\r\n","import React, { useState } from \"react\";\r\nimport \"./ReadBook.scss\";\r\n\r\nconst ReadBook = (props) => {\r\n  const renderSentences = () => {\r\n    return props.bookData.map((line, l) => {\r\n      return (\r\n        <p key={l}>\r\n          {line.content.map((sentence, i) => {\r\n            let htmlSentence = \"\";\r\n            sentence.parts.forEach((part) => {\r\n              part.tags.forEach((tag) => {\r\n                htmlSentence += `<${tag}>`;\r\n              });\r\n              htmlSentence += part.text + \" \";\r\n              part.tags\r\n                .slice(0)\r\n                .reverse()\r\n                .forEach((tag) => {\r\n                  htmlSentence += `</${tag}>`;\r\n                });\r\n            });\r\n            const textClassName =\r\n              (sentence.header ? \"header\" : \"line\") + \"-read mr-1\";\r\n            return (\r\n              <label\r\n                dangerouslySetInnerHTML={{ __html: htmlSentence }}\r\n                key={i}\r\n                className={textClassName}\r\n              ></label>\r\n            );\r\n          })}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderLinesFromData = () => {\r\n    return renderSentences();\r\n  };\r\n\r\n  const getCurrentStyle = () => {\r\n    return { backgroundColor: \"white\" };\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={getCurrentStyle()}>\r\n      {props.bookData ? renderLinesFromData() : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ReadBook);\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useLocation, Route, Redirect } from \"react-router-dom\";\r\nimport BookUploadForm from \"./BookUploadForm\";\r\nimport EditBookScreen from \"./EditBookScreen\";\r\nimport ReadBook from \"./ReadBook\";\r\n\r\nconst Routes = (props) => {\r\n  const location = useLocation();\r\n  const {\r\n    setPathName,\r\n    setBookContent,\r\n    bookContent,\r\n    bookData,\r\n    setBookData,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    setPathName(location.pathname);\r\n  }, [location, setPathName]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Route exact path=\"/edit\">\r\n        <EditBookScreen bookContent={bookContent} setBookData={setBookData} />\r\n      </Route>\r\n      <Route exact path=\"/upload\">\r\n        <BookUploadForm setBookContent={setBookContent} />\r\n      </Route>\r\n      <Route exact path=\"/preview\">\r\n        <ReadBook bookData={bookData} />\r\n      </Route>\r\n      <Redirect exact from=\"/\" to={bookContent ? \"/edit\" : \"/upload\"} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(Routes);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport NavigationBar from \"./NavigationBar\";\nimport Routes from \"./Routes\";\n\nconst App = () => {\n  const [bookContent, setBookContent] = useState(null);\n  const [pathName, setPathName] = useState(null);\n  const [bookData, setBookData] = useState(null);\n\n  const getBookContentFromServer = () => {\n    console.warn(\"Not implemented getBookContentFromServer. Returning null.\");\n    return null;\n  };\n\n  useEffect(() => {\n    const bookContent = getBookContentFromServer();\n    setBookContent(bookContent);\n  }, []);\n\n  return (\n    <Fragment>\n      <HashRouter>\n        <NavigationBar pathName={pathName} />\n        <div className=\"header-space\"></div>\n        <Route path=\"/\">\n          <Routes\n            setPathName={setPathName}\n            bookContent={bookContent}\n            setBookContent={setBookContent}\n            bookData={bookData}\n            setBookData={setBookData}\n          />\n        </Route>\n      </HashRouter>\n    </Fragment>\n  );\n};\n\nexport default React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container-fluid BookEditorContainer\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}